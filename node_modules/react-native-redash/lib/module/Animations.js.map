{"version":3,"sources":["Animations.ts"],"names":["Animated","useMemoOne","min","Clock","Value","set","add","multiply","cond","eq","abs","sub","not","diff","lessThan","greaterThan","useCode","divide","modulo","proc","moving","position","minPositionDelta","emptyFrameThreshold","delta","noMovementFrames","snapPoint","value","velocity","points","point","diffPoint","p","deltas","map","minDelta","reduce","acc","bInterpolate","origin","destination","useValues","values","deps","v","useNamedValues","result","Object","keys","forEach","key","useClocks","numberOfClocks","Array","fill","useDiff","node","dDiff","addTo","subTo","multiplyTo","divideTo","moduloTo"],"mappings":"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","sourcesContent":["import Animated from \"react-native-reanimated\";\nimport { useMemoOne } from \"use-memo-one\";\n\nimport { min } from \"./Math\";\n\nconst {\n  Clock,\n  Value,\n  set,\n  add,\n  multiply,\n  cond,\n  eq,\n  abs,\n  sub,\n  not,\n  diff,\n  lessThan,\n  greaterThan,\n  useCode,\n  divide,\n  modulo,\n  proc,\n} = Animated;\n\nexport type SpringConfig = Partial<Omit<Animated.SpringConfig, \"toValue\">>;\nexport type TimingConfig = Partial<Omit<Animated.TimingConfig, \"toValue\">>;\n\nexport const moving = (\n  position: Animated.Node<number>,\n  minPositionDelta = 1e-3,\n  emptyFrameThreshold = 5\n) => {\n  const delta = diff(position);\n  const noMovementFrames = new Value(0);\n  return cond(\n    lessThan(abs(delta), minPositionDelta),\n    [\n      set(noMovementFrames, add(noMovementFrames, 1)),\n      not(greaterThan(noMovementFrames, emptyFrameThreshold)),\n    ],\n    [set(noMovementFrames, 0), 1]\n  );\n};\n\nexport const snapPoint = (\n  value: Animated.Adaptable<number>,\n  velocity: Animated.Adaptable<number>,\n  points: Animated.Adaptable<number>[]\n) => {\n  const point = add(value, multiply(0.2, velocity));\n  const diffPoint = (p: Animated.Adaptable<number>) => abs(sub(point, p));\n  const deltas = points.map((p) => diffPoint(p));\n  const minDelta = min(...deltas);\n  return points.reduce(\n    (acc, p) => cond(eq(diffPoint(p), minDelta), p, acc),\n    new Value()\n  ) as Animated.Node<number>;\n};\n\nexport const bInterpolate = proc(\n  (\n    value: Animated.Adaptable<number>,\n    origin: Animated.Adaptable<number>,\n    destination: Animated.Adaptable<number>\n  ) => add(origin, multiply(value, sub(destination, origin)))\n);\n\ntype Dependencies = readonly unknown[];\ntype Atomic = string | number | boolean;\n\nexport const useValues = <V extends Atomic>(\n  values: V[],\n  deps: Dependencies\n): Animated.Value<V>[] =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemoOne(() => values.map((v) => new Value(v)), deps);\n\nexport const useNamedValues = <V extends Atomic, K extends string>(\n  values: Record<K, V>,\n  deps: Dependencies\n): Record<K, Animated.Value<V>> =>\n  useMemoOne(() => {\n    const result: Record<string, Animated.Value<V>> = {};\n    Object.keys(values).forEach((key) => {\n      result[key as K] = new Value(values[key as K]);\n    });\n    return result;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\nexport const useClocks = (\n  numberOfClocks: number,\n  deps: Dependencies\n): Animated.Clock[] =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemoOne(() => new Array(numberOfClocks).fill(0).map(() => new Clock()), [\n    deps,\n  ]);\n\nexport const useDiff = (node: Animated.Node<number>, deps: Dependencies) => {\n  const [dDiff] = useValues<number>([0], deps);\n  useCode(() => set(dDiff, diff(node)), [dDiff, node]);\n  return dDiff;\n};\n\nexport const addTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, add(value, node))\n);\n\nexport const subTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, sub(value, node))\n);\n\nexport const multiplyTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, multiply(value, node))\n);\n\nexport const divideTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, divide(value, node))\n);\n\nexport const moduloTo = proc(\n  (value: Animated.Value<number>, node: Animated.Adaptable<number>) =>\n    set(value, modulo(value, node))\n);\n"]}