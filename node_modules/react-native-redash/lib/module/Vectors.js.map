{"version":3,"sources":["Vectors.ts"],"names":["Animated","Value","block","create","x","y","add","a","b","sub","multiply","divide","invert","set","Vector"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,yBAArB,C,GAEQC,CAAAA,K,CAAiBD,Q,CAAjBC,K,CAAOC,K,CAAUF,Q,CAAVE,K,CAYf,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,CAAD,CAAYC,CAAZ,QAA2B,CACxCD,CAAC,CAAE,GAAIH,CAAAA,KAAJ,CAAUG,CAAV,CADqC,CAExCC,CAAC,CAAE,GAAIJ,CAAAA,KAAJ,CAAUI,CAAV,CAFqC,CAA3B,EAAf,CAKA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,CAAD,CAAYC,CAAZ,QAA2B,CACrCJ,CAAC,CAAEJ,QAAQ,CAACM,GAAT,CAAaC,CAAC,CAACH,CAAf,CAAkBI,CAAC,CAACJ,CAApB,CADkC,CAErCC,CAAC,CAAEL,QAAQ,CAACM,GAAT,CAAaC,CAAC,CAACF,CAAf,CAAkBG,CAAC,CAACH,CAApB,CAFkC,CAA3B,EAAZ,CAKA,GAAMI,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACF,CAAD,CAAYC,CAAZ,QAA2B,CACrCJ,CAAC,CAAEJ,QAAQ,CAACS,GAAT,CAAaF,CAAC,CAACH,CAAf,CAAkBI,CAAC,CAACJ,CAApB,CADkC,CAErCC,CAAC,CAAEL,QAAQ,CAACS,GAAT,CAAaF,CAAC,CAACF,CAAf,CAAkBG,CAAC,CAACH,CAApB,CAFkC,CAA3B,EAAZ,CAKA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,CAAD,CAAYC,CAAZ,QAA2B,CAC1CJ,CAAC,CAAEJ,QAAQ,CAACU,QAAT,CAAkBH,CAAC,CAACH,CAApB,CAAuBI,CAAC,CAACJ,CAAzB,CADuC,CAE1CC,CAAC,CAAEL,QAAQ,CAACU,QAAT,CAAkBH,CAAC,CAACF,CAApB,CAAuBG,CAAC,CAACH,CAAzB,CAFuC,CAA3B,EAAjB,CAKA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACJ,CAAD,CAAYC,CAAZ,QAA2B,CACxCJ,CAAC,CAAEJ,QAAQ,CAACW,MAAT,CAAgBJ,CAAC,CAACH,CAAlB,CAAqBI,CAAC,CAACJ,CAAvB,CADqC,CAExCC,CAAC,CAAEL,QAAQ,CAACW,MAAT,CAAgBJ,CAAC,CAACF,CAAlB,CAAqBG,CAAC,CAACH,CAAvB,CAFqC,CAA3B,EAAf,CAKA,GAAMO,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACL,CAAD,QAAeG,CAAAA,QAAQ,CAAC,CAAEN,CAAC,CAAE,CAAC,CAAN,CAASC,CAAC,CAAE,CAAC,CAAb,CAAD,CAAmBE,CAAnB,CAAvB,EAAf,CAEA,GAAMM,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACN,CAAD,CAAiBC,CAAjB,QACVN,CAAAA,KAAK,CAAC,CAACF,QAAQ,CAACa,GAAT,CAAaN,CAAC,CAACH,CAAf,CAAkBI,CAAC,CAACJ,CAApB,CAAD,CAAyBJ,QAAQ,CAACa,GAAT,CAAaN,CAAC,CAACF,CAAf,CAAkBG,CAAC,CAACH,CAApB,CAAzB,CAAD,CADK,EAAZ,CAGA,MAAO,IAAMS,CAAAA,MAAM,CAAG,CACpBX,MAAM,CAANA,MADoB,CAEpBS,MAAM,CAANA,MAFoB,CAGpBN,GAAG,CAAHA,GAHoB,CAIpBG,GAAG,CAAHA,GAJoB,CAKpBC,QAAQ,CAARA,QALoB,CAMpBC,MAAM,CAANA,MANoB,CAOpBE,GAAG,CAAHA,GAPoB,CAAf","sourcesContent":["import Animated from \"react-native-reanimated\";\n\nconst { Value, block } = Animated;\n\nexport interface Vector {\n  x: Animated.Adaptable<number>;\n  y: Animated.Adaptable<number>;\n}\n\nexport interface VectorValue {\n  x: Animated.Value<number>;\n  y: Animated.Value<number>;\n}\n\nconst create = (x: number, y: number) => ({\n  x: new Value(x),\n  y: new Value(y),\n});\n\nconst add = (a: Vector, b: Vector) => ({\n  x: Animated.add(a.x, b.x),\n  y: Animated.add(a.y, b.y),\n});\n\nconst sub = (a: Vector, b: Vector) => ({\n  x: Animated.sub(a.x, b.x),\n  y: Animated.sub(a.y, b.y),\n});\n\nconst multiply = (a: Vector, b: Vector) => ({\n  x: Animated.multiply(a.x, b.x),\n  y: Animated.multiply(a.y, b.y),\n});\n\nconst divide = (a: Vector, b: Vector) => ({\n  x: Animated.divide(a.x, b.x),\n  y: Animated.divide(a.y, b.y),\n});\n\nconst invert = (a: Vector) => multiply({ x: -1, y: -1 }, a);\n\nconst set = (a: VectorValue, b: Vector) =>\n  block([Animated.set(a.x, b.x), Animated.set(a.y, b.y)]);\n\nexport const Vector = {\n  create,\n  invert,\n  add,\n  sub,\n  multiply,\n  divide,\n  set,\n};\n"]}