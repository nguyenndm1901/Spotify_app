import Animated from "react-native-reanimated";
export declare const bin: (value: boolean) => 0 | 1;
export declare const inc: (...args: Animated.Adaptable<number>[]) => Animated.Node<number>;
export declare const dec: (...args: Animated.Adaptable<number>[]) => Animated.Node<number>;
export declare const min: (...args: Animated.Adaptable<number>[]) => Animated.Adaptable<number>;
export declare const max: (...args: Animated.Adaptable<number>[]) => Animated.Adaptable<number>;
export declare const clamp: (...args: Animated.Adaptable<number>[]) => Animated.Node<number>;
export declare const between: (value: Animated.Node<number>, lowerBound: Animated.Adaptable<number>, upperBound: Animated.Adaptable<number>, inclusive?: boolean) => Animated.Node<0 | 1>;
export declare const approximates: (...args: Animated.Adaptable<number>[]) => Animated.Node<number>;
export declare const toRad: (...args: Animated.Adaptable<number>[]) => Animated.Node<number>;
export declare const toDeg: (...args: Animated.Adaptable<number>[]) => Animated.Node<number>;
export declare const atan2: (...args: Animated.Adaptable<number>[]) => Animated.Node<number>;
export declare const cubicBezier: (...args: Animated.Adaptable<number>[]) => Animated.Node<number>;
export declare const round: (...args: Animated.Adaptable<number>[]) => Animated.Node<number>;
