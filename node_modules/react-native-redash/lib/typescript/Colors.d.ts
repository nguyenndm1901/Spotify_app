import Animated from "react-native-reanimated";
declare type Color = Animated.Adaptable<string> | Animated.Adaptable<number>;
export declare const opacity: (c: number) => number;
export declare const red: (c: number) => number;
export declare const green: (c: number) => number;
export declare const blue: (c: number) => number;
interface ColorInterpolationConfig {
    inputRange: readonly Animated.Adaptable<number>[];
    outputRange: Color[];
}
export declare const interpolateColor: (value: Animated.Adaptable<number>, config: ColorInterpolationConfig, colorSpace?: "hsv" | "rgb") => Animated.Node<number>;
export declare const bInterpolateColor: (value: Animated.Adaptable<number>, color1: string | number | Animated.Node<number> | readonly (number | Animated.Node<number> | readonly (number | Animated.Node<number>)[])[] | Animated.Node<string> | readonly (string | Animated.Node<string> | readonly (string | Animated.Node<string>)[])[], color2: string | number | Animated.Node<number> | readonly (number | Animated.Node<number> | readonly (number | Animated.Node<number>)[])[] | Animated.Node<string> | readonly (string | Animated.Node<string> | readonly (string | Animated.Node<string>)[])[], colorSpace?: "hsv" | "rgb") => Animated.Node<number>;
export {};
