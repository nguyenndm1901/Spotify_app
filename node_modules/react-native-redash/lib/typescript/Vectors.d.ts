import Animated from "react-native-reanimated";
export interface Vector {
    x: Animated.Adaptable<number>;
    y: Animated.Adaptable<number>;
}
export interface VectorValue {
    x: Animated.Value<number>;
    y: Animated.Value<number>;
}
export declare const Vector: {
    create: (x: number, y: number) => {
        x: Animated.Value<number>;
        y: Animated.Value<number>;
    };
    invert: (a: Vector) => {
        x: Animated.Node<number>;
        y: Animated.Node<number>;
    };
    add: (a: Vector, b: Vector) => {
        x: Animated.Node<number>;
        y: Animated.Node<number>;
    };
    sub: (a: Vector, b: Vector) => {
        x: Animated.Node<number>;
        y: Animated.Node<number>;
    };
    multiply: (a: Vector, b: Vector) => {
        x: Animated.Node<number>;
        y: Animated.Node<number>;
    };
    divide: (a: Vector, b: Vector) => {
        x: Animated.Node<number>;
        y: Animated.Node<number>;
    };
    set: (a: VectorValue, b: Vector) => Animated.Node<number>;
};
